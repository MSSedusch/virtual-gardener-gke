#!/bin/bash -e

source "$(dirname "$(dirname "$0")")/bin/env"

if [ ! -d "$STATE/identity" ]; then
  fail "Deploy identity first!"
fi

if [ ! -d "$STATE/virtualapiserver" ]; then
  fail "Deploy virtual api server first!"
fi

dashboard_version="1.27.0"
dashboard_helm="helm"
mkdir -p "$STATE/dashboard"

dashboard_ingress_domain="$(cat "$STATE/identity/dashboard_dns")"

git_checkout -branch "dashboard" "Dashboard" "https://github.com/gardener/dashboard.git" $dashboard_helm "charts"

issuerurl="$(cat "$STATE/identity/issuerurl")"
template="$(cat "$CURRENT/template.json")"

setjsonvalue template "apiServerUrl" "https://$(cat "$STATE/virtualapiserver/apiserver_dns")"
setjsonvalue template "hosts[0]" "$dashboard_ingress_domain"
setjsonvalue template "image.tag" "$dashboard_version"
setjsonvalue template "oidc.issuerUrl" "$issuerurl"

# setjsonvalue template "tls.crt" "$(cat "$path_tls_out/gardener-dashboard.pem")"
# setjsonvalue template "tls.key" "$(cat "$path_tls_out/gardener-dashboard-key.pem")"

setjsonvalue template "tls.crt" "$(cat "$STATE/identity/tls/identity.pem")"
setjsonvalue template "tls.key" "$(cat "$STATE/identity/tls/identity-key.pem")"

setjsonvalue template "oidc.ca" "$(cat "$STATE/identity/tls/identity-ca.pem")"
setjsonvalue template "oidc.redirectUri" "https://$dashboard_ingress_domain/callback"

setjsonvalue template "kubeconfig" "$(cat "$STATE/virtualapiserver/kubeconfig.yaml")"

info "Deploying dashboard ..."
echo "$template" > "$GEN/dashboard/values.json"

helm upgrade \
  --install \
  --force \
  --wait \
  --values "$GEN/dashboard/values.json" \
  --namespace $NAME \
  gardener-dashboard \
  "$repo/charts/gardener-dashboard"

cat << EOF | kubectl --kubeconfig "$STATE/virtualapiserver/kubeconfig.yaml" apply -f -
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    garden.sapcloud.io/role: admins
  name: garden-administrators
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: garden.sapcloud.io:system:project-member
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: User
  name: admin@example.com
EOF

echo "##################################################

Dashboard URL: https://$dashboard_ingress_domain

##################################################"












